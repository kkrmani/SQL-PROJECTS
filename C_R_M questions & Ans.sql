use c_r_m;
-- C_R_M Based 20 Queries

-- 1.Get all customers from Mumbai

SELECT * FROM Customers WHERE Address LIKE '%Mumbai%';

-- 2.Get the total number of customers

SELECT COUNT(*) AS Total_Customers FROM Customers;

-- 3.Find customers whose first name starts with 'A'

SELECT * FROM Customers WHERE FirstName LIKE 'A%';

-- 4.Get the most expensive product

SELECT * FROM Products ORDER BY Price DESC LIMIT 1;

-- 5.Find the total number of products in stock

SELECT SUM(StockQuantity) AS Total_Stock FROM Products;

-- 6.Find orders placed in February 2025

SELECT * FROM Orders WHERE OrderDate BETWEEN '2025-02-01' AND '2025-02-28';

-- 7.Get the total revenue from all orders

SELECT SUM(TotalAmount) AS Total_Revenue FROM Orders;

-- 8.Get all products in the 'Electronics' category

SELECT * FROM Products WHERE Category = 'Electronics';

-- 9.Get the customer who placed the most recent order

SELECT * FROM Customers WHERE CustomerID = (SELECT CustomerID FROM Orders ORDER BY OrderDate DESC LIMIT 1);

-- 10.Find the average price of all products

SELECT AVG(Price) AS Avg_Product_Price FROM Products;

-- 11.List all orders with a total amount greater than â‚¹10,000

SELECT * FROM Orders WHERE TotalAmount > 10000;

-- 12.Get the most frequently ordered product

SELECT p.ProductID, p.ProductName, SUM(oi.Quantity) AS TotalQuantityOrdered
FROM OrderItems oi
JOIN Products p ON oi.ProductID = p.ProductID
GROUP BY p.ProductID
ORDER BY TotalQuantityOrdered DESC
LIMIT 1;

-- 13.Find all customers who have placed at least one order

SELECT DISTINCT c.* FROM Customers c
JOIN Orders o ON c.CustomerID = o.CustomerID;

-- 14.Get the total number of orders placed by each customer

SELECT CustomerID, COUNT(OrderID) AS TotalOrders 
FROM Orders 
GROUP BY CustomerID;

-- 15.List the top 3 highest-priced products

SELECT * FROM Products ORDER BY Price DESC LIMIT 3;

-- 16.Find the total revenue generated by each product

SELECT ProductID, SUM(Quantity * Price) AS TotalRevenue 
FROM OrderItems 
GROUP BY ProductID;

-- 17.Find the customer who has spent the most money

SELECT c.CustomerID, concat(c.FirstName, c.LastName)as name, SUM(o.TotalAmount) AS TotalSpent 
FROM Customers c
JOIN Orders o ON c.CustomerID = o.CustomerID
GROUP BY c.CustomerID
ORDER BY TotalSpent DESC
LIMIT 1;

-- 18.Get all orders sorted by date in descending order

SELECT * FROM Orders ORDER BY OrderDate DESC;

-- 19.Find the least ordered product

SELECT ProductID, COUNT(*) AS OrderCount 
FROM OrderItems 
GROUP BY ProductID 
ORDER BY OrderCount ASC 
LIMIT 1;

-- 20.Get the total number of orders placed in each month of 2025

SELECT MONTH(OrderDate) AS Month, COUNT(*) AS TotalOrders 
FROM Orders 
WHERE YEAR(OrderDate) = 2025
GROUP BY MONTH(OrderDate);
--------------------------------------------------------------------------------------------------
delimiter  &&
create procedure getcustomer()
begin
select * from customers;
end&& ;
delimiter &&
call getcustomer(); 
-----------------------------------
delimiter  &&
create procedure getemployees()
begin
select * from employees;
end&& ;
delimiter &&
call getemployees();
--------------------------------------
delimiter  &&
create procedure getinteractions()
begin
select * from interactions;
end&& ;
delimiter &&
call getinteractions();
---------------------------------------
delimiter  &&
create procedure getorderitems()
begin
select * from orderitems;
end&& ;
delimiter &&
call getorderitems();
-------------------------------------
delimiter  &&
create procedure getorders()
begin
select * from orders;
end&& ;
delimiter &&
call getorders()
-------------------------------------------
delimiter  &&
create procedure getproducts()
begin
select * from products;
end&& ;
delimiter &&
call getproducts()
--------------------------------------
delimiter  &&
create procedure getsales()
begin
select * from sales;
end&& ;
delimiter &&
call getsales();
------------------------------------










